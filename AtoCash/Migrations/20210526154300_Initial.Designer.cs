// <auto-generated />
using System;
using AtoCash.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AtoCash.Migrations
{
    [DbContext(typeof(AtoCashDbContext))]
    [Migration("20210526154300_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AtoCash.Authentication.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("AtoCash.Models.ApprovalGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApprovalGroupCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ApprovalGroupDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalGroups");
                });

            modelBuilder.Entity("AtoCash.Models.ApprovalLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("LevelDesc")
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalLevels");
                });

            modelBuilder.Entity("AtoCash.Models.ApprovalRoleMap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevelId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("ApprovalLevelId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApprovalRoleMaps");
                });

            modelBuilder.Entity("AtoCash.Models.ApprovalStatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("StatusDesc")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalStatusTypes");
                });

            modelBuilder.Entity("AtoCash.Models.ClaimApprovalStatusTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinalApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PettyCashRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReqDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalLevelId");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("PettyCashRequestId");

                    b.HasIndex("ProjManagerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("ClaimApprovalStatusTrackers");
                });

            modelBuilder.Entity("AtoCash.Models.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CostCenterCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CostCenterDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("CostCenters");
                });

            modelBuilder.Entity("AtoCash.Models.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CurrencyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("CurrencyTypes");
                });

            modelBuilder.Entity("AtoCash.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("DeptCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DeptName")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("AtoCash.Models.DisbursementsAndClaimsMaster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("AmountToCredit")
                        .HasColumnType("float");

                    b.Property<double?>("AmountToWallet")
                        .HasColumnType("float");

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnType("int");

                    b.Property<double>("ClaimAmount")
                        .HasColumnType("float");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ExpenseReimburseReqId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsSettledAmountCredited")
                        .HasColumnType("bit");

                    b.Property<int?>("PettyCashRequestId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RecordDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("SettledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SettlementAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettlementBankCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettlementComment")
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExpenseReimburseReqId");

                    b.HasIndex("PettyCashRequestId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RequestTypeId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("DisbursementsAndClaimsMasters");
                });

            modelBuilder.Entity("AtoCash.Models.EmpCurrentPettyCashBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CurBalance")
                        .HasColumnType("float");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmpCurrentPettyCashBalances");
                });

            modelBuilder.Entity("AtoCash.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("BankCardNo")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DOJ")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EmploymentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("NationalID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassportNo")
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalGroupId");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmploymentTypeId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("AtoCash.Models.EmploymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmpJobTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("EmpJobTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("EmploymentTypes");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseReimburseRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpReimReqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpenseReportTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<double>("TotalClaimAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("ExpenseReimburseRequests");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseReimburseStatusTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpReimReqDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpenseReimburseRequestId")
                        .HasColumnType("int");

                    b.Property<int>("JobRoleId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<double>("TotalClaimAmount")
                        .HasColumnType("float");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalLevelId");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ExpenseReimburseRequestId");

                    b.HasIndex("JobRoleId");

                    b.HasIndex("ProjManagerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("ExpenseReimburseStatusTrackers");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseSubClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("DocumentIDs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExpenseReimbClaimAmount")
                        .HasColumnType("float");

                    b.Property<int>("ExpenseReimburseRequestId")
                        .HasColumnType("int");

                    b.Property<int>("ExpenseTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<float>("Tax")
                        .HasColumnType("real");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ExpenseReimburseRequestId");

                    b.HasIndex("ExpenseTypeId");

                    b.ToTable("ExpenseSubClaims");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExpenseTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("ExpenseTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("ExpenseTypes");
                });

            modelBuilder.Entity("AtoCash.Models.FileDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActualFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UniqueFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDocuments");
                });

            modelBuilder.Entity("AtoCash.Models.JobRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MaxPettyCashAllowed")
                        .HasColumnType("float");

                    b.Property<string>("RoleCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("JobRoles");
                });

            modelBuilder.Entity("AtoCash.Models.PettyCashRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CashReqDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CurrencyTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("PettyClaimAmount")
                        .HasColumnType("float");

                    b.Property<string>("PettyClaimRequestDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("CurrencyTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("PettyCashRequests");
                });

            modelBuilder.Entity("AtoCash.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("ProjectManagerId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("StatusTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("ProjectManagerId");

                    b.HasIndex("StatusTypeId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("AtoCash.Models.ProjectManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectManagements");
                });

            modelBuilder.Entity("AtoCash.Models.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RequestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RequestTypeDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("AtoCash.Models.StatusType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.ToTable("StatusTypes");
                });

            modelBuilder.Entity("AtoCash.Models.SubProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("SubProjectDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SubProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("SubProjects");
                });

            modelBuilder.Entity("AtoCash.Models.TravelApprovalRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReqRaisedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TravelEndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TravelPurpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("TravelStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("TravelApprovalRequests");
                });

            modelBuilder.Entity("AtoCash.Models.TravelApprovalStatusTracker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalLevelId")
                        .HasColumnType("int");

                    b.Property<int>("ApprovalStatusTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FinalApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProjManagerId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReqDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TravelApprovalRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TravelEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TravelStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("WorkTaskId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprovalLevelId");

                    b.HasIndex("ApprovalStatusTypeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("ProjManagerId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SubProjectId");

                    b.HasIndex("TravelApprovalRequestId");

                    b.HasIndex("WorkTaskId");

                    b.ToTable("TravelApprovalStatusTrackers");
                });

            modelBuilder.Entity("AtoCash.Models.WorkTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SubProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TaskDesc")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("SubProjectId");

                    b.ToTable("WorkTasks");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("AtoCash.Models.ApprovalRoleMap", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalGroup", "ApprovalGroup")
                        .WithMany()
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ApprovalLevel", "ApprovalLevel")
                        .WithMany()
                        .HasForeignKey("ApprovalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.JobRole", "JobRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalGroup");

                    b.Navigation("ApprovalLevel");

                    b.Navigation("JobRole");
                });

            modelBuilder.Entity("AtoCash.Models.ClaimApprovalStatusTracker", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalLevel", "ApprovalLevel")
                        .WithMany()
                        .HasForeignKey("ApprovalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.PettyCashRequest", "PettyCashRequest")
                        .WithMany()
                        .HasForeignKey("PettyCashRequestId");

                    b.HasOne("AtoCash.Models.Employee", "ProjManager")
                        .WithMany()
                        .HasForeignKey("ProjManagerId");

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.JobRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalLevel");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("PettyCashRequest");

                    b.Navigation("Project");

                    b.Navigation("ProjManager");

                    b.Navigation("Role");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.CostCenter", b =>
                {
                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.CurrencyType", b =>
                {
                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.Department", b =>
                {
                    b.HasOne("AtoCash.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.DisbursementsAndClaimsMaster", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ExpenseReimburseRequest", "ExpenseReimburseRequest")
                        .WithMany()
                        .HasForeignKey("ExpenseReimburseReqId");

                    b.HasOne("AtoCash.Models.PettyCashRequest", "PettyCashRequest")
                        .WithMany()
                        .HasForeignKey("PettyCashRequestId");

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("CostCenter");

                    b.Navigation("CurrencyType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("ExpenseReimburseRequest");

                    b.Navigation("PettyCashRequest");

                    b.Navigation("Project");

                    b.Navigation("RequestType");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.EmpCurrentPettyCashBalance", b =>
                {
                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("AtoCash.Models.Employee", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalGroup", "ApprovalGroup")
                        .WithMany()
                        .HasForeignKey("ApprovalGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.EmploymentType", "EmploymentType")
                        .WithMany()
                        .HasForeignKey("EmploymentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.JobRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApprovalGroup");

                    b.Navigation("CurrencyType");

                    b.Navigation("Department");

                    b.Navigation("EmploymentType");

                    b.Navigation("Role");

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseReimburseRequest", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("CurrencyType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseReimburseStatusTracker", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalLevel", "ApprovalLevel")
                        .WithMany()
                        .HasForeignKey("ApprovalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ExpenseReimburseRequest", "ExpenseReimburseRequest")
                        .WithMany()
                        .HasForeignKey("ExpenseReimburseRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.JobRole", "JobRole")
                        .WithMany()
                        .HasForeignKey("JobRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Employee", "ProjManager")
                        .WithMany()
                        .HasForeignKey("ProjManagerId");

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalLevel");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("CurrencyType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("ExpenseReimburseRequest");

                    b.Navigation("JobRole");

                    b.Navigation("Project");

                    b.Navigation("ProjManager");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseSubClaim", b =>
                {
                    b.HasOne("AtoCash.Models.ExpenseReimburseRequest", "ExpenseReimburseRequest")
                        .WithMany()
                        .HasForeignKey("ExpenseReimburseRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ExpenseType", "ExpenseType")
                        .WithMany()
                        .HasForeignKey("ExpenseTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpenseReimburseRequest");

                    b.Navigation("ExpenseType");
                });

            modelBuilder.Entity("AtoCash.Models.ExpenseType", b =>
                {
                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.PettyCashRequest", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CurrencyType", "CurrencyType")
                        .WithMany()
                        .HasForeignKey("CurrencyTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("CurrencyType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.Project", b =>
                {
                    b.HasOne("AtoCash.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Employee", "ProjectManager")
                        .WithMany()
                        .HasForeignKey("ProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.StatusType", "StatusType")
                        .WithMany()
                        .HasForeignKey("StatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CostCenter");

                    b.Navigation("ProjectManager");

                    b.Navigation("StatusType");
                });

            modelBuilder.Entity("AtoCash.Models.ProjectManagement", b =>
                {
                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("AtoCash.Models.SubProject", b =>
                {
                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("AtoCash.Models.TravelApprovalRequest", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("CostCenter");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("SubProject");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.TravelApprovalStatusTracker", b =>
                {
                    b.HasOne("AtoCash.Models.ApprovalLevel", "ApprovalLevel")
                        .WithMany()
                        .HasForeignKey("ApprovalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.ApprovalStatusType", "ApprovalStatusType")
                        .WithMany()
                        .HasForeignKey("ApprovalStatusTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");

                    b.HasOne("AtoCash.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.Employee", "ProjManager")
                        .WithMany()
                        .HasForeignKey("ProjManagerId");

                    b.HasOne("AtoCash.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId");

                    b.HasOne("AtoCash.Models.JobRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId");

                    b.HasOne("AtoCash.Models.TravelApprovalRequest", "TravelApprovalRequest")
                        .WithMany()
                        .HasForeignKey("TravelApprovalRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Models.WorkTask", "WorkTask")
                        .WithMany()
                        .HasForeignKey("WorkTaskId");

                    b.Navigation("ApprovalLevel");

                    b.Navigation("ApprovalStatusType");

                    b.Navigation("Department");

                    b.Navigation("Employee");

                    b.Navigation("Project");

                    b.Navigation("ProjManager");

                    b.Navigation("Role");

                    b.Navigation("SubProject");

                    b.Navigation("TravelApprovalRequest");

                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("AtoCash.Models.WorkTask", b =>
                {
                    b.HasOne("AtoCash.Models.SubProject", "SubProject")
                        .WithMany()
                        .HasForeignKey("SubProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubProject");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AtoCash.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AtoCash.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AtoCash.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AtoCash.Authentication.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
